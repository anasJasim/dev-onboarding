version: "3.9"
services:
  envoy:
    build: ./config/envoy
    ports:
      - "${ENVOY_BACKEND_PORT}:${ENVOY_BACKEND_PORT}"
      - "${ENVOY_ADMIN_PORT}:${ENVOY_ADMIN_PORT}"
    environment:
      SERVICE_NAME: backend
      DEBUG_LEVEL: debug
      SERVICE_PORT: "${NODE_PORT}"
      SERVICE_LISTEN_PORT: "${ENVOY_BACKEND_PORT}"
      ADMIN_LISTEN_PORT: "${ENVOY_ADMIN_PORT}"
    volumes:
      - ./config/envoy/envoy.yaml:/etc/envoy/envoy.yaml
    networks:
      - dev_onboarding
    depends_on:
      - backend
  backend:
    image: dev_onboarding_backend
    build: ./
    command: npm run start
    expose:
      - "${NODE_PORT}"
    restart: unless-stopped
    environment:
      NODE_PORT: "${NODE_PORT}"
      # Postgres
      POSTGRESS_URL: "${POSTGRESS_URL}"
      # Redis
      REDIS_DB_HOST: redis
      REDIS_DB_PORT: 6379
    networks:
      - dev_onboarding
    depends_on:
      - postgres
      - redis
  postgres:
    image: postgres
    container_name: dev_onboarding_postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: dev_onboarding
      POSTGRES_USER: root
    volumes:
      - postgresDB:/var/lib/postgresql
    networks:
      - dev_onboarding
  redis:
    image: redis
    container_name: dev_onboarding_redis
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - dev_onboarding

volumes:
  postgresDB:
  redis:


networks:
  dev_onboarding:
    driver: bridge
